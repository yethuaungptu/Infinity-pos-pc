
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.StoreScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  phone: 'phone',
  email: 'email',
  website: 'website',
  taxRate: 'taxRate',
  currency: 'currency',
  timezone: 'timezone',
  receiptHeader: 'receiptHeader',
  receiptFooter: 'receiptFooter',
  printLogo: 'printLogo',
  logoData: 'logoData',
  creditTermsDefault: 'creditTermsDefault',
  maxCreditLimit: 'maxCreditLimit',
  interestRate: 'interestRate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StaffScalarFieldEnum = {
  id: 'id',
  employeeId: 'employeeId',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  phone: 'phone',
  position: 'position',
  department: 'department',
  hireDate: 'hireDate',
  salary: 'salary',
  active: 'active',
  username: 'username',
  password: 'password',
  lastLogin: 'lastLogin',
  permissions: 'permissions',
  totalCollections: 'totalCollections',
  averageQuality: 'averageQuality',
  onTimeRate: 'onTimeRate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  type: 'type',
  businessName: 'businessName',
  contactPerson: 'contactPerson',
  email: 'email',
  phone: 'phone',
  address: 'address',
  creditLimit: 'creditLimit',
  creditBalance: 'creditBalance',
  paymentTerms: 'paymentTerms',
  creditStatus: 'creditStatus',
  farmSize: 'farmSize',
  animalTypes: 'animalTypes',
  henEggsDailyProduction: 'henEggsDailyProduction',
  duckEggsDailyProduction: 'duckEggsDailyProduction',
  collectionSchedule: 'collectionSchedule',
  isRetail: 'isRetail',
  loyaltyPoints: 'loyaltyPoints',
  totalPurchases: 'totalPurchases',
  totalEggSales: 'totalEggSales',
  lastPurchase: 'lastPurchase',
  lastEggCollection: 'lastEggCollection',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VendorScalarFieldEnum = {
  id: 'id',
  companyName: 'companyName',
  contactPerson: 'contactPerson',
  email: 'email',
  phone: 'phone',
  street: 'street',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  country: 'country',
  creditLimit: 'creditLimit',
  creditBalance: 'creditBalance',
  paymentTerms: 'paymentTerms',
  earlyPaymentDiscount: 'earlyPaymentDiscount',
  productTypes: 'productTypes',
  totalPurchases: 'totalPurchases',
  onTimePaymentRate: 'onTimePaymentRate',
  lastOrder: 'lastOrder',
  lastPayment: 'lastPayment',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  sku: 'sku',
  name: 'name',
  description: 'description',
  type: 'type',
  category: 'category',
  costPrice: 'costPrice',
  sellingPrice: 'sellingPrice',
  wholesalePrice: 'wholesalePrice',
  stock: 'stock',
  unit: 'unit',
  minimumStock: 'minimumStock',
  expiryDate: 'expiryDate',
  batchNumber: 'batchNumber',
  manufacturer: 'manufacturer',
  requiresPrescription: 'requiresPrescription',
  activeIngredient: 'activeIngredient',
  dosage: 'dosage',
  animalType: 'animalType',
  nutritionInfo: 'nutritionInfo',
  feedType: 'feedType',
  primaryVendorId: 'primaryVendorId',
  alternateVendors: 'alternateVendors',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  receiptNumber: 'receiptNumber',
  type: 'type',
  customerId: 'customerId',
  vendorId: 'vendorId',
  subtotal: 'subtotal',
  tax: 'tax',
  discount: 'discount',
  total: 'total',
  paymentMethod: 'paymentMethod',
  paidAmount: 'paidAmount',
  balanceAmount: 'balanceAmount',
  status: 'status',
  timestamp: 'timestamp',
  dueDate: 'dueDate',
  staffId: 'staffId',
  notes: 'notes',
  synced: 'synced',
  cloudId: 'cloudId',
  syncError: 'syncError',
  lastSync: 'lastSync',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TransactionItemScalarFieldEnum = {
  id: 'id',
  transactionId: 'transactionId',
  productId: 'productId',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  total: 'total',
  productName: 'productName',
  productSku: 'productSku',
  unit: 'unit',
  batchNumber: 'batchNumber',
  expiryDate: 'expiryDate',
  grade: 'grade'
};

exports.Prisma.EggCollectionScalarFieldEnum = {
  id: 'id',
  farmerId: 'farmerId',
  routeId: 'routeId',
  staffId: 'staffId',
  collectionDate: 'collectionDate',
  henEggsSmall: 'henEggsSmall',
  henEggsMedium: 'henEggsMedium',
  henEggsLarge: 'henEggsLarge',
  henEggsExtraLarge: 'henEggsExtraLarge',
  henEggsDamaged: 'henEggsDamaged',
  totalHenEggs: 'totalHenEggs',
  duckEggsSmall: 'duckEggsSmall',
  duckEggsMedium: 'duckEggsMedium',
  duckEggsLarge: 'duckEggsLarge',
  duckEggsDamaged: 'duckEggsDamaged',
  totalDuckEggs: 'totalDuckEggs',
  henEggPrice: 'henEggPrice',
  duckEggPrice: 'duckEggPrice',
  totalValue: 'totalValue',
  qualityScore: 'qualityScore',
  qualityNotes: 'qualityNotes',
  paid: 'paid',
  paymentDate: 'paymentDate',
  synced: 'synced',
  cloudId: 'cloudId',
  syncError: 'syncError',
  lastSync: 'lastSync',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CollectionRouteScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  estimatedTime: 'estimatedTime',
  estimatedDistance: 'estimatedDistance',
  schedule: 'schedule',
  staffId: 'staffId',
  averageTime: 'averageTime',
  onTimePercentage: 'onTimePercentage',
  totalCollections: 'totalCollections',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PurchaseOrderScalarFieldEnum = {
  id: 'id',
  orderNumber: 'orderNumber',
  vendorId: 'vendorId',
  orderDate: 'orderDate',
  expectedDate: 'expectedDate',
  receivedDate: 'receivedDate',
  subtotal: 'subtotal',
  tax: 'tax',
  shipping: 'shipping',
  total: 'total',
  status: 'status',
  orderedBy: 'orderedBy',
  receivedBy: 'receivedBy',
  notes: 'notes',
  synced: 'synced',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PurchaseOrderItemScalarFieldEnum = {
  id: 'id',
  purchaseOrderId: 'purchaseOrderId',
  productId: 'productId',
  quantityOrdered: 'quantityOrdered',
  quantityReceived: 'quantityReceived',
  unitCost: 'unitCost',
  totalCost: 'totalCost',
  productName: 'productName',
  productSku: 'productSku'
};

exports.Prisma.PaymentRecordScalarFieldEnum = {
  id: 'id',
  type: 'type',
  amount: 'amount',
  customerId: 'customerId',
  vendorId: 'vendorId',
  transactionId: 'transactionId',
  paymentMethod: 'paymentMethod',
  paymentDate: 'paymentDate',
  dueDate: 'dueDate',
  referenceNumber: 'referenceNumber',
  checkNumber: 'checkNumber',
  processedBy: 'processedBy',
  notes: 'notes',
  synced: 'synced',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SystemSettingScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  type: 'type',
  description: 'description',
  category: 'category',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  tableName: 'tableName',
  recordId: 'recordId',
  action: 'action',
  oldValues: 'oldValues',
  newValues: 'newValues',
  userId: 'userId',
  userAgent: 'userAgent',
  ipAddress: 'ipAddress',
  timestamp: 'timestamp'
};

exports.Prisma.SyncLogScalarFieldEnum = {
  id: 'id',
  tableName: 'tableName',
  recordId: 'recordId',
  operation: 'operation',
  syncedAt: 'syncedAt',
  success: 'success',
  error: 'error',
  attempts: 'attempts',
  conflictResolution: 'conflictResolution'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  category: 'category',
  priority: 'priority',
  title: 'title',
  message: 'message',
  recipientIds: 'recipientIds',
  globalNotification: 'globalNotification',
  read: 'read',
  readAt: 'readAt',
  readBy: 'readBy',
  expiresAt: 'expiresAt',
  actionRequired: 'actionRequired',
  actionUrl: 'actionUrl',
  actionData: 'actionData',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.StaffPosition = exports.$Enums.StaffPosition = {
  MANAGER: 'MANAGER',
  CASHIER: 'CASHIER',
  COLLECTOR: 'COLLECTOR',
  ADMIN: 'ADMIN',
  SUPERVISOR: 'SUPERVISOR'
};

exports.StaffDepartment = exports.$Enums.StaffDepartment = {
  SALES: 'SALES',
  COLLECTION: 'COLLECTION',
  INVENTORY: 'INVENTORY',
  ADMIN: 'ADMIN',
  MANAGEMENT: 'MANAGEMENT'
};

exports.CustomerType = exports.$Enums.CustomerType = {
  FARMER: 'FARMER',
  REGULAR: 'REGULAR',
  WHOLESALE: 'WHOLESALE'
};

exports.CreditStatus = exports.$Enums.CreditStatus = {
  CURRENT: 'CURRENT',
  OVERDUE_30: 'OVERDUE_30',
  OVERDUE_60: 'OVERDUE_60',
  OVERDUE_90: 'OVERDUE_90',
  BAD_DEBT: 'BAD_DEBT'
};

exports.CollectionSchedule = exports.$Enums.CollectionSchedule = {
  DAILY: 'DAILY',
  ALTERNATE: 'ALTERNATE',
  WEEKLY: 'WEEKLY',
  CUSTOM: 'CUSTOM'
};

exports.ProductType = exports.$Enums.ProductType = {
  FEED: 'FEED',
  MEDICINE: 'MEDICINE',
  EQUIPMENT: 'EQUIPMENT',
  EGGS: 'EGGS',
  SUPPLIES: 'SUPPLIES',
  OTHER: 'OTHER'
};

exports.TransactionType = exports.$Enums.TransactionType = {
  SALE: 'SALE',
  PURCHASE: 'PURCHASE',
  EGG_COLLECTION: 'EGG_COLLECTION',
  EGG_SALE: 'EGG_SALE',
  REFUND: 'REFUND',
  ADJUSTMENT: 'ADJUSTMENT'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  CASH: 'CASH',
  CREDIT: 'CREDIT',
  BANK_TRANSFER: 'BANK_TRANSFER',
  CHECK: 'CHECK',
  DIGITAL: 'DIGITAL'
};

exports.TransactionStatus = exports.$Enums.TransactionStatus = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED',
  PARTIAL_REFUND: 'PARTIAL_REFUND'
};

exports.PurchaseOrderStatus = exports.$Enums.PurchaseOrderStatus = {
  PENDING: 'PENDING',
  ORDERED: 'ORDERED',
  PARTIAL_RECEIVED: 'PARTIAL_RECEIVED',
  RECEIVED: 'RECEIVED',
  CANCELLED: 'CANCELLED'
};

exports.PaymentType = exports.$Enums.PaymentType = {
  CUSTOMER_PAYMENT: 'CUSTOMER_PAYMENT',
  VENDOR_PAYMENT: 'VENDOR_PAYMENT',
  EGG_PAYMENT: 'EGG_PAYMENT',
  REFUND: 'REFUND',
  ADJUSTMENT: 'ADJUSTMENT',
  DEBIT: 'DEBIT'
};

exports.SettingType = exports.$Enums.SettingType = {
  STRING: 'STRING',
  NUMBER: 'NUMBER',
  BOOLEAN: 'BOOLEAN',
  JSON: 'JSON'
};

exports.AuditAction = exports.$Enums.AuditAction = {
  CREATE: 'CREATE',
  UPDATE: 'UPDATE',
  DELETE: 'DELETE',
  LOGIN: 'LOGIN',
  LOGOUT: 'LOGOUT',
  SYNC: 'SYNC'
};

exports.SyncOperation = exports.$Enums.SyncOperation = {
  CREATE: 'CREATE',
  UPDATE: 'UPDATE',
  DELETE: 'DELETE',
  BULK_SYNC: 'BULK_SYNC'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  INFO: 'INFO',
  SUCCESS: 'SUCCESS',
  WARNING: 'WARNING',
  ERROR: 'ERROR',
  ALERT: 'ALERT'
};

exports.NotificationCategory = exports.$Enums.NotificationCategory = {
  INVENTORY: 'INVENTORY',
  SALES: 'SALES',
  CUSTOMER: 'CUSTOMER',
  VENDOR: 'VENDOR',
  SYSTEM: 'SYSTEM',
  QUALITY: 'QUALITY',
  FINANCIAL: 'FINANCIAL'
};

exports.NotificationPriority = exports.$Enums.NotificationPriority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

exports.Prisma.ModelName = {
  Store: 'Store',
  Staff: 'Staff',
  Customer: 'Customer',
  Vendor: 'Vendor',
  Product: 'Product',
  Transaction: 'Transaction',
  TransactionItem: 'TransactionItem',
  EggCollection: 'EggCollection',
  CollectionRoute: 'CollectionRoute',
  PurchaseOrder: 'PurchaseOrder',
  PurchaseOrderItem: 'PurchaseOrderItem',
  PaymentRecord: 'PaymentRecord',
  SystemSetting: 'SystemSetting',
  AuditLog: 'AuditLog',
  SyncLog: 'SyncLog',
  Notification: 'Notification'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/yethuaung/outsource/infinity-pos-pc/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/yethuaung/outsource/infinity-pos-pc/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "localdb"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "localdb": {
      "url": {
        "fromEnvVar": null,
        "value": "file:./agripos.db"
      }
    }
  },
  "inlineSchema": "// Prisma Schema for Agricultural POS System\n// Supports both PostgreSQL (cloud) and SQLite (offline)\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\n// Main database - PostgreSQL for production\n// datasource db {\n//   provider = \"postgresql\"\n//   url      = env(\"DATABASE_URL\")\n// }\n\n// Local database - SQLite for offline mode\ndatasource localdb {\n  provider = \"sqlite\"\n  url      = \"file:./agripos.db\"\n}\n\n// ===== CORE BUSINESS MODELS =====\n\nmodel Store {\n  id       String  @id @default(cuid())\n  name     String\n  address  String\n  phone    String\n  email    String?\n  website  String?\n  taxRate  Float   @default(0.08)\n  currency String  @default(\"USD\")\n  timezone String  @default(\"America/New_York\")\n\n  // Receipt settings\n  receiptHeader String?\n  receiptFooter String?\n  printLogo     Boolean @default(false)\n  logoData      String? // Base64 encoded logo\n\n  // Business settings\n  creditTermsDefault Int   @default(30)\n  maxCreditLimit     Float @default(50000)\n  interestRate       Float @default(0.015)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"stores\")\n}\n\n// ===== USER MANAGEMENT =====\n\nmodel Staff {\n  id         String  @id @default(cuid())\n  employeeId String  @unique\n  firstName  String\n  lastName   String\n  email      String? @unique\n  phone      String?\n\n  // Employment details\n  position   StaffPosition\n  department StaffDepartment\n  hireDate   DateTime\n  salary     Int\n  active     Boolean         @default(true)\n\n  // System access\n  username  String    @unique\n  password  String? // Hashed password\n  lastLogin DateTime?\n\n  // Permissions (JSON array)\n  permissions Json @default(\"[]\")\n\n  // Performance metrics for collectors\n  totalCollections Int?   @default(0)\n  averageQuality   Float?\n  onTimeRate       Float?\n  // collectionRoutes    Json? // Array of route IDs\n\n  // Relations\n  transactions     Transaction[]\n  eggCollections   EggCollection[]\n  paymentRecords   PaymentRecord[]\n  collectionRoutes CollectionRoute[]\n\n  createdAt     DateTime        @default(now())\n  updatedAt     DateTime        @updatedAt\n  PurchaseOrder PurchaseOrder[]\n\n  @@index([employeeId], map: \"idx_staff_employee\")\n  @@index([username], map: \"idx_staff_username\")\n  @@map(\"staff\")\n}\n\nenum StaffPosition {\n  MANAGER\n  CASHIER\n  COLLECTOR\n  ADMIN\n  SUPERVISOR\n}\n\nenum StaffDepartment {\n  SALES\n  COLLECTION\n  INVENTORY\n  ADMIN\n  MANAGEMENT\n}\n\n// ===== CUSTOMER MANAGEMENT =====\n\nmodel Customer {\n  id   String       @id @default(cuid())\n  type CustomerType\n\n  // Basic info\n  businessName  String?\n  contactPerson String\n  email         String?\n  phone         String?\n\n  // Address\n  address String?\n\n  // Credit information\n  creditLimit   Int          @default(0)\n  creditBalance Int          @default(0) // Current outstanding amount\n  paymentTerms  Int          @default(30) // Days\n  creditStatus  CreditStatus @default(CURRENT)\n\n  // Farmer-specific fields\n  farmSize    Float? // in acres\n  animalTypes Json? // Array of animal types\n\n  // Egg production tracking\n  henEggsDailyProduction  Int                @default(0)\n  duckEggsDailyProduction Int                @default(0)\n  collectionSchedule      CollectionSchedule @default(DAILY)\n\n  // Regular customer fields\n  isRetail      Boolean @default(false)\n  loyaltyPoints Int     @default(0)\n\n  // Business metrics\n  totalPurchases    Int       @default(0)\n  totalEggSales     Int       @default(0)\n  lastPurchase      DateTime?\n  lastEggCollection DateTime?\n\n  // Relations\n  transactions   Transaction[]\n  eggCollections EggCollection[]\n  paymentRecords PaymentRecord[]\n  routes         CollectionRoute[] @relation(\"RouteCustomers\")\n\n  active    Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"customers\")\n}\n\nenum CustomerType {\n  FARMER\n  REGULAR\n  WHOLESALE\n}\n\nenum CreditStatus {\n  CURRENT\n  OVERDUE_30\n  OVERDUE_60\n  OVERDUE_90\n  BAD_DEBT\n}\n\nenum CollectionSchedule {\n  DAILY\n  ALTERNATE\n  WEEKLY\n  CUSTOM\n}\n\n// ===== VENDOR MANAGEMENT =====\n\nmodel Vendor {\n  id            String  @id @default(cuid())\n  companyName   String\n  contactPerson String\n  email         String?\n  phone         String?\n\n  // Address\n  street  String?\n  city    String?\n  state   String?\n  zipCode String?\n  country String  @default(\"US\")\n\n  // Credit terms they give us\n  creditLimit          Float  @default(0)\n  creditBalance        Float  @default(0) // What we owe them\n  paymentTerms         Int    @default(30) // Days they give us\n  earlyPaymentDiscount Float? // Percentage discount for early payment\n\n  // Product categories they supply\n  productTypes Json @default(\"[]\") // Array of ProductType\n\n  // Performance metrics\n  totalPurchases    Float     @default(0)\n  onTimePaymentRate Float     @default(100)\n  lastOrder         DateTime?\n  lastPayment       DateTime?\n\n  // Relations\n  products       Product[]\n  purchaseOrders PurchaseOrder[]\n  paymentRecords PaymentRecord[]\n\n  active      Boolean       @default(true)\n  createdAt   DateTime      @default(now())\n  updatedAt   DateTime      @updatedAt\n  Transaction Transaction[]\n\n  @@map(\"vendors\")\n}\n\n// ===== PRODUCT MANAGEMENT =====\n\nmodel Product {\n  id          String      @id @default(cuid())\n  sku         String      @unique\n  name        String\n  description String?\n  type        ProductType\n  category    String\n\n  // Pricing\n  costPrice      Float // What we pay vendor\n  sellingPrice   Float // Regular customer price\n  wholesalePrice Float? // Farmer/wholesale price\n\n  // Inventory\n  stock        Int\n  unit         String // 'kg', 'bags', 'pieces', 'dozens'\n  minimumStock Int    @default(0)\n\n  // Product attributes\n  expiryDate   DateTime?\n  batchNumber  String?\n  manufacturer String?\n\n  // Medicine-specific\n  requiresPrescription Boolean @default(false)\n  activeIngredient     String?\n  dosage               String?\n\n  // Feed-specific\n  animalType    String? // 'poultry', 'cattle', 'dairy'\n  nutritionInfo String?\n  feedType      String? // 'starter', 'grower', 'layer'\n\n  // Vendor relationship\n  primaryVendorId  String\n  primaryVendor    Vendor @relation(fields: [primaryVendorId], references: [id])\n  alternateVendors Json? // Array of vendor IDs\n\n  // Relations\n  transactionItems   TransactionItem[]\n  purchaseOrderItems PurchaseOrderItem[]\n\n  active    Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Product indexes  \n  @@index([sku], map: \"idx_products_sku\")\n  @@index([type], map: \"idx_products_type\")\n  @@index([active], map: \"idx_products_active\")\n  @@map(\"products\")\n}\n\nenum ProductType {\n  FEED\n  MEDICINE\n  EQUIPMENT\n  EGGS\n  SUPPLIES\n  OTHER\n}\n\n// ===== TRANSACTION MANAGEMENT =====\n\nmodel Transaction {\n  id            String          @id @default(cuid())\n  receiptNumber String          @unique\n  type          TransactionType\n\n  // Customer/Vendor\n  customerId String?\n  customer   Customer? @relation(fields: [customerId], references: [id])\n  vendorId   String?\n  vendor     Vendor?   @relation(fields: [vendorId], references: [id])\n\n  // Financial details\n  subtotal Float\n  tax      Float\n  discount Float @default(0)\n  total    Float\n\n  // Payment info\n  paymentMethod PaymentMethod\n  paidAmount    Float         @default(0)\n  balanceAmount Float         @default(0) // For credit transactions\n\n  // Status and timing\n  status    TransactionStatus @default(COMPLETED)\n  timestamp DateTime          @default(now())\n  dueDate   DateTime? // For credit transactions\n\n  // Staff and location\n  staffId String\n  staff   Staff  @relation(fields: [staffId], references: [id])\n\n  // Additional info\n  notes String?\n\n  // Relations\n  items          TransactionItem[]\n  paymentRecords PaymentRecord[]\n\n  // Sync tracking\n  synced    Boolean   @default(false)\n  cloudId   String? // Reference to cloud record when offline\n  syncError String?\n  lastSync  DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([customerId], map: \"idx_transactions_customer\")\n  @@index([timestamp], map: \"idx_transactions_timestamp\")\n  @@index([status], map: \"idx_transactions_status\")\n  @@index([receiptNumber], map: \"idx_transactions_receipt\")\n  @@map(\"transactions\")\n}\n\nmodel TransactionItem {\n  id String @id @default(cuid())\n\n  // Transaction relationship\n  transactionId String\n  transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)\n\n  // Product relationship\n  productId String\n  product   Product @relation(fields: [productId], references: [id])\n\n  // Item details\n  quantity  Int\n  unitPrice Int\n  total     Int\n\n  // Product snapshot (for historical accuracy)\n  productName String\n  productSku  String\n  unit        String\n\n  // Special attributes\n  batchNumber String?\n  expiryDate  DateTime?\n  grade       String? // For eggs: 'small', 'medium', 'large', 'xl'\n\n  @@map(\"transaction_items\")\n}\n\nenum TransactionType {\n  SALE\n  PURCHASE\n  EGG_COLLECTION\n  EGG_SALE\n  REFUND\n  ADJUSTMENT\n}\n\nenum PaymentMethod {\n  CASH\n  CREDIT\n  BANK_TRANSFER\n  CHECK\n  DIGITAL\n}\n\nenum TransactionStatus {\n  PENDING\n  COMPLETED\n  CANCELLED\n  REFUNDED\n  PARTIAL_REFUND\n}\n\n// ===== EGG COLLECTION SYSTEM =====\n\nmodel EggCollection {\n  id String @id @default(cuid())\n\n  // Farm and route\n  farmerId String\n  farmer   Customer         @relation(fields: [farmerId], references: [id])\n  routeId  String?\n  route    CollectionRoute? @relation(fields: [routeId], references: [id])\n\n  // Staff and timing\n  staffId        String\n  staff          Staff    @relation(fields: [staffId], references: [id])\n  collectionDate DateTime @default(now())\n\n  // Hen eggs breakdown\n  henEggsSmall      Int @default(0)\n  henEggsMedium     Int @default(0)\n  henEggsLarge      Int @default(0)\n  henEggsExtraLarge Int @default(0)\n  henEggsDamaged    Int @default(0)\n  totalHenEggs      Int @default(0)\n\n  // Duck eggs breakdown\n  duckEggsSmall   Int @default(0)\n  duckEggsMedium  Int @default(0)\n  duckEggsLarge   Int @default(0)\n  duckEggsDamaged Int @default(0)\n  totalDuckEggs   Int @default(0)\n\n  // Pricing (per dozen)\n  henEggPrice  Float\n  duckEggPrice Float\n\n  // Totals\n  totalValue Float\n\n  // Quality tracking\n  qualityScore Float? // 1-5 rating\n  qualityNotes String?\n\n  // Payment tracking\n  paid        Boolean   @default(false)\n  paymentDate DateTime?\n\n  // Sync tracking\n  synced    Boolean   @default(false)\n  cloudId   String?\n  syncError String?\n  lastSync  DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Egg collection indexes\n  @@index([farmerId], map: \"idx_egg_collections_farmer\")\n  @@index([collectionDate], map: \"idx_egg_collections_date\")\n  @@index([paid], map: \"idx_egg_collections_paid\")\n  @@map(\"egg_collections\")\n}\n\nmodel CollectionRoute {\n  id          String  @id @default(cuid())\n  name        String\n  description String?\n\n  // Route details\n  estimatedTime     Int // minutes\n  estimatedDistance Float // km\n  schedule          CollectionSchedule @default(DAILY)\n\n  // Assigned staff\n  staffId String?\n  staff   Staff?  @relation(fields: [staffId], references: [id])\n\n  // Route customers\n  customers Customer[] @relation(\"RouteCustomers\")\n\n  // Performance metrics\n  averageTime      Int?\n  onTimePercentage Float?\n  totalCollections Int    @default(0)\n\n  // Relations\n  eggCollections EggCollection[]\n\n  active    Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"collection_routes\")\n}\n\n// ===== PURCHASE ORDER MANAGEMENT =====\n\nmodel PurchaseOrder {\n  id          String @id @default(cuid())\n  orderNumber String @unique\n\n  // Vendor relationship\n  vendorId String\n  vendor   Vendor @relation(fields: [vendorId], references: [id])\n\n  // Order details\n  orderDate    DateTime  @default(now())\n  expectedDate DateTime?\n  receivedDate DateTime?\n\n  // Financial\n  subtotal Float\n  tax      Float @default(0)\n  shipping Float @default(0)\n  total    Float\n\n  // Status\n  status PurchaseOrderStatus @default(PENDING)\n\n  // Staff\n  orderedBy  String\n  staff      Staff   @relation(fields: [orderedBy], references: [id])\n  receivedBy String?\n\n  // Relations\n  items PurchaseOrderItem[]\n\n  notes String?\n\n  synced    Boolean  @default(false)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"purchase_orders\")\n}\n\nmodel PurchaseOrderItem {\n  id String @id @default(cuid())\n\n  // Purchase order relationship\n  purchaseOrderId String\n  purchaseOrder   PurchaseOrder @relation(fields: [purchaseOrderId], references: [id], onDelete: Cascade)\n\n  // Product relationship\n  productId String\n  product   Product @relation(fields: [productId], references: [id])\n\n  // Order details\n  quantityOrdered  Int\n  quantityReceived Int   @default(0)\n  unitCost         Float\n  totalCost        Float\n\n  // Product snapshot\n  productName String\n  productSku  String\n\n  @@map(\"purchase_order_items\")\n}\n\nenum PurchaseOrderStatus {\n  PENDING\n  ORDERED\n  PARTIAL_RECEIVED\n  RECEIVED\n  CANCELLED\n}\n\n// ===== PAYMENT MANAGEMENT =====\n\nmodel PaymentRecord {\n  id     String      @id @default(cuid())\n  type   PaymentType\n  amount Float\n\n  // Customer payment\n  customerId String?\n  customer   Customer? @relation(fields: [customerId], references: [id])\n\n  // Vendor payment\n  vendorId String?\n  vendor   Vendor? @relation(fields: [vendorId], references: [id])\n\n  // Transaction reference\n  transactionId String?\n  transaction   Transaction? @relation(fields: [transactionId], references: [id])\n\n  // Payment details\n  paymentMethod PaymentMethod\n  paymentDate   DateTime      @default(now())\n  dueDate       DateTime?\n\n  // Reference numbers\n  referenceNumber String?\n  checkNumber     String?\n\n  // Staff\n  processedBy String\n  staff       Staff  @relation(fields: [processedBy], references: [id])\n\n  notes String?\n\n  synced    Boolean  @default(false)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"payment_records\")\n}\n\nenum PaymentType {\n  CUSTOMER_PAYMENT\n  VENDOR_PAYMENT\n  EGG_PAYMENT\n  REFUND\n  ADJUSTMENT\n  DEBIT\n}\n\n// ===== SYSTEM CONFIGURATION =====\n\nmodel SystemSetting {\n  id    String      @id @default(cuid())\n  key   String      @unique\n  value String\n  type  SettingType @default(STRING)\n\n  description String?\n  category    String  @default(\"general\")\n\n  updatedAt DateTime @updatedAt\n  updatedBy String?\n\n  @@map(\"system_settings\")\n}\n\nenum SettingType {\n  STRING\n  NUMBER\n  BOOLEAN\n  JSON\n}\n\n// ===== AUDIT & LOGGING =====\n\nmodel AuditLog {\n  id        String      @id @default(cuid())\n  tableName String\n  recordId  String\n  action    AuditAction\n\n  // Changes\n  oldValues Json?\n  newValues Json?\n\n  // User context\n  userId    String?\n  userAgent String?\n  ipAddress String?\n\n  timestamp DateTime @default(now())\n\n  @@map(\"audit_logs\")\n}\n\nenum AuditAction {\n  CREATE\n  UPDATE\n  DELETE\n  LOGIN\n  LOGOUT\n  SYNC\n}\n\n// ===== SYNC TRACKING =====\n\nmodel SyncLog {\n  id        String        @id @default(cuid())\n  tableName String\n  recordId  String\n  operation SyncOperation\n\n  // Sync details\n  syncedAt DateTime @default(now())\n  success  Boolean\n  error    String?\n  attempts Int      @default(1)\n\n  // Conflict resolution\n  conflictResolution String?\n\n  @@map(\"sync_logs\")\n}\n\nenum SyncOperation {\n  CREATE\n  UPDATE\n  DELETE\n  BULK_SYNC\n}\n\n// ===== NOTIFICATIONS =====\n\nmodel Notification {\n  id       String               @id @default(cuid())\n  type     NotificationType\n  category NotificationCategory\n  priority NotificationPriority @default(MEDIUM)\n\n  title   String\n  message String\n\n  // Recipients\n  recipientIds       Json? // Array of staff IDs\n  globalNotification Boolean @default(false)\n\n  // Status\n  read   Boolean   @default(false)\n  readAt DateTime?\n  readBy String?\n\n  // Expiration\n  expiresAt DateTime?\n\n  // Actions\n  actionRequired Boolean @default(false)\n  actionUrl      String?\n  actionData     Json?\n\n  createdAt DateTime @default(now())\n\n  @@map(\"notifications\")\n}\n\nenum NotificationType {\n  INFO\n  SUCCESS\n  WARNING\n  ERROR\n  ALERT\n}\n\nenum NotificationCategory {\n  INVENTORY\n  SALES\n  CUSTOMER\n  VENDOR\n  SYSTEM\n  QUALITY\n  FINANCIAL\n}\n\nenum NotificationPriority {\n  LOW\n  MEDIUM\n  HIGH\n  CRITICAL\n}\n\n// ===== INDEXES FOR PERFORMANCE =====\n\n// Staff indexes\n\n// Sync indexes\n// @@index([synced], map: \"idx_sync_status\")\n// @@index([cloudId], map: \"idx_cloud_reference\")\n",
  "inlineSchemaHash": "8732e2e751a3076f5a93ee08e7b4348b1f7044799df1c6fa98049e2c2074820c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Store\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"taxRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receiptHeader\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receiptFooter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"printLogo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"logoData\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creditTermsDefault\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxCreditLimit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"interestRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"stores\"},\"Staff\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"enum\",\"type\":\"StaffPosition\"},{\"name\":\"department\",\"kind\":\"enum\",\"type\":\"StaffDepartment\"},{\"name\":\"hireDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"salary\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"totalCollections\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"averageQuality\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"onTimeRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"StaffToTransaction\"},{\"name\":\"eggCollections\",\"kind\":\"object\",\"type\":\"EggCollection\",\"relationName\":\"EggCollectionToStaff\"},{\"name\":\"paymentRecords\",\"kind\":\"object\",\"type\":\"PaymentRecord\",\"relationName\":\"PaymentRecordToStaff\"},{\"name\":\"collectionRoutes\",\"kind\":\"object\",\"type\":\"CollectionRoute\",\"relationName\":\"CollectionRouteToStaff\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"PurchaseOrder\",\"kind\":\"object\",\"type\":\"PurchaseOrder\",\"relationName\":\"PurchaseOrderToStaff\"}],\"dbName\":\"staff\"},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"CustomerType\"},{\"name\":\"businessName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactPerson\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creditLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditBalance\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"paymentTerms\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditStatus\",\"kind\":\"enum\",\"type\":\"CreditStatus\"},{\"name\":\"farmSize\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"animalTypes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"henEggsDailyProduction\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"duckEggsDailyProduction\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"collectionSchedule\",\"kind\":\"enum\",\"type\":\"CollectionSchedule\"},{\"name\":\"isRetail\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"loyaltyPoints\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalPurchases\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalEggSales\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastPurchase\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastEggCollection\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"CustomerToTransaction\"},{\"name\":\"eggCollections\",\"kind\":\"object\",\"type\":\"EggCollection\",\"relationName\":\"CustomerToEggCollection\"},{\"name\":\"paymentRecords\",\"kind\":\"object\",\"type\":\"PaymentRecord\",\"relationName\":\"CustomerToPaymentRecord\"},{\"name\":\"routes\",\"kind\":\"object\",\"type\":\"CollectionRoute\",\"relationName\":\"RouteCustomers\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"customers\"},\"Vendor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactPerson\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"street\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creditLimit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"creditBalance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"paymentTerms\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"earlyPaymentDiscount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"productTypes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"totalPurchases\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"onTimePaymentRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lastOrder\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastPayment\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToVendor\"},{\"name\":\"purchaseOrders\",\"kind\":\"object\",\"type\":\"PurchaseOrder\",\"relationName\":\"PurchaseOrderToVendor\"},{\"name\":\"paymentRecords\",\"kind\":\"object\",\"type\":\"PaymentRecord\",\"relationName\":\"PaymentRecordToVendor\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Transaction\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"TransactionToVendor\"}],\"dbName\":\"vendors\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ProductType\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"costPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"sellingPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"wholesalePrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minimumStock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expiryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"batchNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"manufacturer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requiresPrescription\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"activeIngredient\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dosage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"animalType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nutritionInfo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feedType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"primaryVendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"primaryVendor\",\"kind\":\"object\",\"type\":\"Vendor\",\"relationName\":\"ProductToVendor\"},{\"name\":\"alternateVendors\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"transactionItems\",\"kind\":\"object\",\"type\":\"TransactionItem\",\"relationName\":\"ProductToTransactionItem\"},{\"name\":\"purchaseOrderItems\",\"kind\":\"object\",\"type\":\"PurchaseOrderItem\",\"relationName\":\"ProductToPurchaseOrderItem\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"products\"},\"Transaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receiptNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"TransactionType\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToTransaction\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Vendor\",\"relationName\":\"TransactionToVendor\"},{\"name\":\"subtotal\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"tax\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"discount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"paidAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"balanceAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TransactionStatus\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"staff\",\"kind\":\"object\",\"type\":\"Staff\",\"relationName\":\"StaffToTransaction\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"TransactionItem\",\"relationName\":\"TransactionToTransactionItem\"},{\"name\":\"paymentRecords\",\"kind\":\"object\",\"type\":\"PaymentRecord\",\"relationName\":\"PaymentRecordToTransaction\"},{\"name\":\"synced\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"cloudId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"syncError\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastSync\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"transactions\"},\"TransactionItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transaction\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"TransactionToTransactionItem\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToTransactionItem\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productSku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"batchNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"grade\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"transaction_items\"},\"EggCollection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"farmerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"farmer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToEggCollection\"},{\"name\":\"routeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"route\",\"kind\":\"object\",\"type\":\"CollectionRoute\",\"relationName\":\"CollectionRouteToEggCollection\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"staff\",\"kind\":\"object\",\"type\":\"Staff\",\"relationName\":\"EggCollectionToStaff\"},{\"name\":\"collectionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"henEggsSmall\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"henEggsMedium\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"henEggsLarge\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"henEggsExtraLarge\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"henEggsDamaged\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalHenEggs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"duckEggsSmall\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"duckEggsMedium\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"duckEggsLarge\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"duckEggsDamaged\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalDuckEggs\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"henEggPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"duckEggPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"qualityScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"qualityNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paid\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"paymentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"synced\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"cloudId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"syncError\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastSync\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"egg_collections\"},\"CollectionRoute\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimatedTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estimatedDistance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"schedule\",\"kind\":\"enum\",\"type\":\"CollectionSchedule\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"staff\",\"kind\":\"object\",\"type\":\"Staff\",\"relationName\":\"CollectionRouteToStaff\"},{\"name\":\"customers\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"RouteCustomers\"},{\"name\":\"averageTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"onTimePercentage\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalCollections\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"eggCollections\",\"kind\":\"object\",\"type\":\"EggCollection\",\"relationName\":\"CollectionRouteToEggCollection\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"collection_routes\"},\"PurchaseOrder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Vendor\",\"relationName\":\"PurchaseOrderToVendor\"},{\"name\":\"orderDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expectedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"receivedDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subtotal\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"tax\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"shipping\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PurchaseOrderStatus\"},{\"name\":\"orderedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"staff\",\"kind\":\"object\",\"type\":\"Staff\",\"relationName\":\"PurchaseOrderToStaff\"},{\"name\":\"receivedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"PurchaseOrderItem\",\"relationName\":\"PurchaseOrderToPurchaseOrderItem\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"synced\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"purchase_orders\"},\"PurchaseOrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchaseOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchaseOrder\",\"kind\":\"object\",\"type\":\"PurchaseOrder\",\"relationName\":\"PurchaseOrderToPurchaseOrderItem\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToPurchaseOrderItem\"},{\"name\":\"quantityOrdered\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantityReceived\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitCost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalCost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"productName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productSku\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"purchase_order_items\"},\"PaymentRecord\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"PaymentType\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToPaymentRecord\"},{\"name\":\"vendorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vendor\",\"kind\":\"object\",\"type\":\"Vendor\",\"relationName\":\"PaymentRecordToVendor\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transaction\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"PaymentRecordToTransaction\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"paymentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"referenceNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checkNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"staff\",\"kind\":\"object\",\"type\":\"Staff\",\"relationName\":\"PaymentRecordToStaff\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"synced\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"payment_records\"},\"SystemSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"SettingType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"system_settings\"},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tableName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recordId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"enum\",\"type\":\"AuditAction\"},{\"name\":\"oldValues\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"newValues\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"audit_logs\"},\"SyncLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tableName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recordId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"operation\",\"kind\":\"enum\",\"type\":\"SyncOperation\"},{\"name\":\"syncedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"success\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"error\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conflictResolution\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"sync_logs\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"NotificationCategory\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"NotificationPriority\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipientIds\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"globalNotification\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"readBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actionRequired\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"actionUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actionData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"notifications\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {}
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

